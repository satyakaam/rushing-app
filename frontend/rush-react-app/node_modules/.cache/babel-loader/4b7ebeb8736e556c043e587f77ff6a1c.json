{"ast":null,"code":"import _classCallCheck from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/app/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); //Initial data from API\n\n    _this.state = {\n      data: []\n    };\n    axios.get(\"http://localhost:3000/players\").then(function (res) {\n      // Update react-table\n      _this.setState({\n        data: res.data.data,\n        loading: false\n      });\n    });\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        Header: \"Player\",\n        accessor: \"attributes.name\"\n      }, {\n        Header: \"Team\",\n        accessor: \"attributes.team\"\n      }, {\n        Header: \"Pos\",\n        accessor: \"attributes.position\"\n      }, {\n        Header: \"Att\",\n        accessor: \"attributes.attempts\"\n      }, {\n        Header: \"Att/G\",\n        accessor: \"attributes.attempts_per_game_average\"\n      }, {\n        Header: \"Yds\",\n        accessor: \"attributes.total_yards\"\n      }, {\n        Header: \"Avg\",\n        accessor: \"attributes.name\"\n      }, {\n        Header: \"Name\",\n        accessor: \"attributes.name\"\n      }, {\n        Header: \"Name\",\n        accessor: \"attributes.name\"\n      }];\n      return /*#__PURE__*/React.createElement(ReactTable, {\n        columns: columns,\n        data: this.state.data,\n        pages: this.state.pages,\n        loading: this.state.loading,\n        filterable: true,\n        onPageChange: function onPageChange(pageIndex) {\n          var pagesize = 5;\n          var low = pageIndex * pagesize;\n          var high = pageIndex * pagesize + pagesize;\n          axios.get(\"http://localhost:3000/players\").then(function (res) {\n            // Update react-table\n            _this2.setState({\n              data: res.data.data,\n              loading: false\n            });\n          });\n        },\n        defaultPageSize: 5,\n        noDataText: \"Loading...\",\n        manual: true // informs React Table that you'll be handling sorting and pagination server-side\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.js"],"names":["React","Component","ReactTable","axios","App","props","state","data","get","then","res","setState","loading","columns","Header","accessor","pages","pageIndex","pagesize","low","high"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IACMC,G;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGAJ,IAAAA,KAAK,CAACK,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAgD,UAAAC,GAAG,EAAI;AACrD;AACA,YAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEG,GAAG,CAACH,IAAJ,CAASA,IADH;AAEZK,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAND;AANiB;AAalB;;;;6BACQ;AAAA;;AACP,UAAMC,OAAO,GAAG,CACd;AACEC,QAAAA,MAAM,EAAE,QADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADc,EAKd;AACED,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALc,EASd;AACED,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OATc,EAad;AACED,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAbc,EAiBd;AACED,QAAAA,MAAM,EAAE,OADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAjBc,EAqBd;AACED,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OArBc,EAyBd;AACED,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAzBc,EA6Bd;AACED,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OA7Bc,EAiCd;AACED,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAjCc,CAAhB;AAsCA,0BACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,IAFnB;AAGE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWU,KAHpB;AAIE,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWM,OAJtB;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,YAAY,EAAE,sBAAAK,SAAS,EAAI;AACzB,cAAIC,QAAQ,GAAG,CAAf;AACA,cAAIC,GAAG,GAAGF,SAAS,GAAGC,QAAtB;AACA,cAAIE,IAAI,GAAGH,SAAS,GAAGC,QAAZ,GAAuBA,QAAlC;AACAf,UAAAA,KAAK,CAACK,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAgD,UAAAC,GAAG,EAAI;AACrD;AACA,YAAA,MAAI,CAACC,QAAL,CAAc;AACZJ,cAAAA,IAAI,EAAEG,GAAG,CAACH,IAAJ,CAASA,IADH;AAEZK,cAAAA,OAAO,EAAE;AAFG,aAAd;AAID,WAND;AAOD,SAjBH;AAkBE,QAAA,eAAe,EAAE,CAlBnB;AAmBE,QAAA,UAAU,EAAE,YAnBd;AAoBE,QAAA,MAAM,MApBR,CAoBS;AApBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAwBD;;;;EA9EeX,S;;AAiFlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    //Initial data from API\n    this.state = {\n      data: []\n    };\n    axios.get(\"http://localhost:3000/players\").then(res => {\n      // Update react-table\n      this.setState({\n        data: res.data.data,\n        loading: false\n      });\n    });\n  }\n  render() {\n    const columns = [\n      {\n        Header: \"Player\",\n        accessor: \"attributes.name\"\n      },\n      {\n        Header: \"Team\",\n        accessor: \"attributes.team\"\n      },\n      {\n        Header: \"Pos\",\n        accessor: \"attributes.position\"\n      },\n      {\n        Header: \"Att\",\n        accessor: \"attributes.attempts\"\n      },\n      {\n        Header: \"Att/G\",\n        accessor: \"attributes.attempts_per_game_average\"\n      },\n      {\n        Header: \"Yds\",\n        accessor: \"attributes.total_yards\"\n      },\n      {\n        Header: \"Avg\",\n        accessor: \"attributes.name\"\n      },\n      {\n        Header: \"Name\",\n        accessor: \"attributes.name\"\n      },\n      {\n        Header: \"Name\",\n        accessor: \"attributes.name\"\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.state.data}\n        pages={this.state.pages}\n        loading={this.state.loading}\n        filterable\n        onPageChange={pageIndex => {\n          let pagesize = 5;\n          let low = pageIndex * pagesize;\n          let high = pageIndex * pagesize + pagesize;\n          axios.get(\"http://localhost:3000/players\").then(res => {\n            // Update react-table\n            this.setState({\n              data: res.data.data,\n              loading: false\n            });\n          });\n        }}\n        defaultPageSize={5}\n        noDataText={\"Loading...\"}\n        manual // informs React Table that you'll be handling sorting and pagination server-side\n      />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}