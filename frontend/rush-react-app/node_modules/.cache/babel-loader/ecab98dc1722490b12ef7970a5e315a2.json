{"ast":null,"code":"import _classCallCheck from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/app/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); //Initial data from API\n\n    _this.state = {\n      data: []\n    };\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(function (res) {\n      // Update react-table\n      _this.setState({\n        posts: res.data,\n        data: res.data.slice(0, 5),\n        pages: res.data.length / 5,\n        loading: false\n      });\n    });\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        Header: \"User ID\",\n        accessor: \"id\",\n        style: {\n          textAlign: \"right\"\n        },\n        width: 100,\n        maxWidth: 100,\n        minWidth: 100\n      }, {\n        Header: \"ID\",\n        accessor: \"userId\",\n        style: {\n          textAlign: \"right\"\n        },\n        width: 100,\n        maxWidth: 100,\n        minWidth: 100\n      }, {\n        Header: \"Title\",\n        accessor: \"title\",\n        sortable: false,\n        filterable: false\n      }, {\n        Header: \"Content\",\n        accessor: \"body\",\n        sortable: false,\n        filterable: false\n      }];\n      return /*#__PURE__*/React.createElement(ReactTable, {\n        columns: columns,\n        data: this.state.data,\n        pages: this.state.pages,\n        loading: this.state.loading,\n        filterable: true,\n        onPageChange: function onPageChange(pageIndex) {\n          var pagesize = 5;\n          var low = pageIndex * pagesize;\n          var high = pageIndex * pagesize + pagesize;\n          axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(function (res) {\n            // Update react-table\n            _this2.setState({\n              posts: res.data,\n              data: res.data.slice(low, high),\n              pages: res.data.pages,\n              loading: false\n            });\n          });\n        },\n        defaultPageSize: 5,\n        noDataText: \"Loading...\",\n        manual: true // informs React Table that you'll be handling sorting and pagination server-side\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.js"],"names":["React","Component","ReactTable","axios","App","props","state","data","get","then","res","setState","posts","slice","pages","length","loading","columns","Header","accessor","style","textAlign","width","maxWidth","minWidth","sortable","filterable","pageIndex","pagesize","low","high"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    //Initial data from API\n    this.state = {\n      data: []\n    };\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => {\n      // Update react-table\n      this.setState({\n        posts: res.data,\n        data: res.data.slice(0, 5),\n        pages: res.data.length / 5,\n        loading: false\n      });\n    });\n  }\n  render() {\n    const columns = [\n      {\n        Header: \"User ID\",\n        accessor: \"id\",\n        style: {\n          textAlign: \"right\"\n        },\n        width: 100,\n        maxWidth: 100,\n        minWidth: 100\n      },\n      {\n        Header: \"ID\",\n        accessor: \"userId\",\n        style: {\n          textAlign: \"right\"\n        },\n        width: 100,\n        maxWidth: 100,\n        minWidth: 100\n      },\n      {\n        Header: \"Title\",\n        accessor: \"title\",\n        sortable: false,\n        filterable: false\n      },\n      {\n        Header: \"Content\",\n        accessor: \"body\",\n        sortable: false,\n        filterable: false\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.state.data}\n        pages={this.state.pages}\n        loading={this.state.loading}\n        filterable\n        onPageChange={pageIndex => {\n          let pagesize = 5;\n          let low = pageIndex * pagesize;\n          let high = pageIndex * pagesize + pagesize;\n          axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => {\n            // Update react-table\n            this.setState({\n              posts: res.data,\n              data: res.data.slice(low, high),\n              pages: res.data.pages,\n              loading: false\n            });\n          });\n        }}\n        defaultPageSize={5}\n        noDataText={\"Loading...\"}\n        manual // informs React Table that you'll be handling sorting and pagination server-side\n      />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}